# This file is autogenerated by maturin v1.7.3
# To update, run
#
#    maturin generate-ci github -o .github/workflows/maturin.yml
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install OpenMPI
        run: |
          sudo apt update
          sudo apt install -y clang libopenmpi-dev
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python
        run: |
          uv python install
          uv venv
          source .venv/bin/activate
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: develop
          args: --uv -m py-laddu/Cargo.toml
      - name: Install pytest
        run: uv pip install pytest
      - name: Run tests
        run: .venv/bin/pytest

  build-wheels:
    needs: test
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            name: linux
            mpi-install-cmd: |
              yum update
              yum install -y clang openmpi-devel
            manylinux: manylinux2014
          - runner: ubuntu-latest
            target: x86
            name: linux
            mpi-install-cmd: |
              yum update
              yum install -y clang openmpi-devel
            manylinux: manylinux2014
          - runner: ubuntu-latest
            target: aarch64
            name: linux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: manylinux2014
          - runner: ubuntu-latest
            target: armv7
            name: linux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: manylinux2014
          - runner: ubuntu-latest
            target: s390x
            name: linux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: manylinux2014
          - runner: ubuntu-latest
            target: ppc64le
            name: linux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: manylinux2014
          - runner: ubuntu-latest
            target: x86_64
            name: musllinux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: musllinux_1_2
          - runner: ubuntu-latest
            target: x86
            name: musllinux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: musllinux_1_2
          - runner: ubuntu-latest
            target: aarch64
            name: musllinux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: musllinux_1_2
          - runner: ubuntu-latest
            target: armv7
            name: musllinux
            mpi-install-cmd: |
              apt update
              apt install -y build-essential clang libopenmpi-dev
            manylinux: musllinux_1_2
          - runner: macos-13
            target: x86_64
            name: macos
            mpi-install-cmd: echo "MPI installed with brew"
            manylinux: auto
          - runner: macos-latest
            target: aarch64
            name: macos
            mpi-install-cmd: echo "MPI installed with brew"
            manylinux: auto
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install Homebrew
        if: ${{ matrix.platform.name }} == 'macos'
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install OpenMPI
        if: ${{ matrix.platform.name }} == 'macos'
        run: env HOMEBREW_NO_AUTO_UPDATE=1 brew install openmpi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist -m py-laddu/Cargo.toml
          sccache: "true"
          manylinux: ${{ matrix.platform.manylinux }}
          before-script-linux: ${{ matrix.platform.mpi-install-cmd }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform.name }}-${{ matrix.platform.target }}
          path: dist

  sdist:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install OpenMPI
        run: |
          sudo apt update
          sudo apt install -y clang mpich libmpich-dev
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist -m py-laddu/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    # if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build-wheels, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
